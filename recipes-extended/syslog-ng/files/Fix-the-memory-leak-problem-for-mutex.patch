Fix the memory leak problem for mutex

Signed-off-by: Xufeng Zhang <xufeng.zhang@windriver.com>
---
--- a/lib/logqueue.c
+++ b/lib/logqueue.c
@@ -188,6 +188,7 @@
 void
 log_queue_free_method(LogQueue *self)
 {
+  g_static_mutex_free(&self->lock);
   g_free(self->persist_name);
   g_free(self);
 }
--- a/modules/affile/affile-dest.c
+++ b/modules/affile/affile-dest.c
@@ -294,6 +294,7 @@
 {
   AFFileDestWriter *self = (AFFileDestWriter *) s;
   
+  g_static_mutex_free(&self->lock);
   log_pipe_unref(self->writer);
   self->writer = NULL;
   g_free(self->filename);
@@ -690,6 +691,7 @@
   /* NOTE: this must be NULL as deinit has freed it, otherwise we'd have circular references */
   g_assert(self->single_writer == NULL && self->writer_hash == NULL);
 
+  g_static_mutex_free(&self->lock);
   log_template_options_destroy(&self->template_fname_options);
   log_template_unref(self->filename_template);
   log_writer_options_destroy(&self->writer_options);
--- a/modules/dbparser/dbparser.c
+++ b/modules/dbparser/dbparser.c
@@ -284,6 +284,7 @@
 {
   LogDBParser *self = (LogDBParser *) s;
 
+  g_static_mutex_free(&self->lock);
   if (self->db)
     pattern_db_free(self->db);
 
