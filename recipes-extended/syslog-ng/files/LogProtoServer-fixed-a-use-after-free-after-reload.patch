From a6958ac023ec687f704c6a564a89e843184d8f0d Mon Sep 17 00:00:00 2001
From: Balazs Scheidler <bazsi@balabit.hu>
Date: Sat, 2 Nov 2013 20:19:12 +0100
Subject: [PATCH] LogProtoServer: fixed a use-after-free after reload

commit a6958ac023ec687f704c6a564a89e843184d8f0d upstream

self->options is a borrowed memory area, managed by the owning driver
that constructed the given LogProtoServer instance. During reload however,
the driver object itself is freed, while the LogProtoServer instance
is kept alive, thereby causing the options pointer to point into the
void.

The solution is to update the options pointer whenever the owner is changed,
chaining into a similar solution in the LogReader code which does exactly
that.

Signed-off-by: Balazs Scheidler <bazsi@balabit.hu>
---
 lib/logproto-server.h |    6 ++++++
 lib/logreader.c                |    2 ++
 2 files changed, 8 insertions(+), 0 deletions(-)

diff --git a/lib/logproto/logproto-server.h b/lib/logproto/logproto-server.h
index 147625a..697c861 100644
--- a/lib/logproto-server.h
+++ b/lib/logproto-server.h
@@ -82,6 +82,12 @@ log_proto_server_validate_options(LogProtoServer *self)
     return log_proto_server_options_validate(self->options);
 }
 
+static inline void
+log_proto_server_set_options(LogProtoServer *self, const LogProtoServerOptions *options)
+{
+  self->options = options;
+}
+
 static inline gboolean
 log_proto_server_prepare(LogProtoServer *s, GIOCondition *cond)
 {
diff --git a/lib/logreader.c b/lib/logreader.c
index 767a20f..5a0b9f6 100644
--- a/lib/logreader.c
+++ b/lib/logreader.c
@@ -465,6 +465,8 @@ log_reader_set_options(LogReader *s, LogPipe *control, LogReaderOptions *options
   self->control = control;
 
   self->options = options;
+  if (self->proto)
+    log_proto_server_set_options(self->proto, &self->options->proto_options.super);
 }
 
 /* run in the main thread in reaction to a log_reader_reopen to change
-- 
1.7.0.2

