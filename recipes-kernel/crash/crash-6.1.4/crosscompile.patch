These patches are created to enable crosscompiling crash.

Signed-off-by: Amy Fong <amy.fong@windriver.com>
--
 Makefile    |   11 +++++++----
 configure.c |   12 ++++++++++++
 2 files changed, 19 insertions(+), 4 deletions(-)

--- a/Makefile
+++ b/Makefile
@@ -47,6 +47,8 @@
 # LDFLAGS will be configured automatically by configure
 LDFLAGS=
 
+AR ?= ar
+
 GENERIC_HFILES=defs.h xen_hyper_defs.h
 MCORE_HFILES=va_server.h vas_crash.h
 REDHAT_HFILES=netdump.h diskdump.h makedumpfile.h xendump.h kvmdump.h qemu-load.h
@@ -224,7 +226,7 @@
 	@echo "../../${PROGRAM} ../../${PROGRAM}lib.a" > ${GDB}/gdb/mergeobj
 	@if [ ! -f ${GDB}/config.status ]; then \
 	  (cd ${GDB}; ./configure ${GDB_CONF_FLAGS} --with-separate-debug-dir=/usr/lib/debug \
-	    --with-bugurl="" --with-expat=no --with-python=no; \
+	    --with-bugurl="" --with-expat=no --with-python=no ${GDB_EXTRA_CONF_FLAGS}; \
 	  make --no-print-directory CRASH_TARGET=${TARGET}; echo ${TARGET} > crash.target) \
 	else (cd ${GDB}/gdb; make --no-print-directory CRASH_TARGET=${TARGET};); fi
 	@if [ ! -f ${GDB}/gdb/libgdb.a ]; then \
@@ -243,7 +245,7 @@
 		patch -p0 < ${GDB}.patch; fi
 
 library: make_build_data ${OBJECT_FILES}
-	ar -rs ${PROGRAM}lib.a ${OBJECT_FILES}
+	${AR} -rs ${PROGRAM}lib.a ${OBJECT_FILES}
 
 gdb: force
 	rm -f ${GDB_OFILES}
@@ -252,10 +254,11 @@
 force:
 	
 
-make_configure: force
-	@rm -f configure
+configure: configure.c
 	@${CC} ${CONF_FLAGS} -o configure configure.c ${WARNING_ERROR} ${WARNING_OPTIONS}
 
+make_configure: configure
+
 clean: make_configure
 	@./configure ${CONF_TARGET_FLAG} -q -b
 	@make --no-print-directory do_clean
--- a/configure.c
+++ b/configure.c
@@ -135,7 +135,11 @@
 #define TARGET_CFLAGS_X86_64 "TARGET_CFLAGS="
 #define TARGET_CFLAGS_ARM            "TARGET_CFLAGS=-D_FILE_OFFSET_BITS=64"
 #define TARGET_CFLAGS_ARM_ON_X86     "TARGET_CFLAGS=-D_FILE_OFFSET_BITS=64"
+#if 0
 #define TARGET_CFLAGS_ARM_ON_X86_64  "TARGET_CFLAGS=-m32 -D_FILE_OFFSET_BITS=64"
+#else
+#define TARGET_CFLAGS_ARM_ON_X86_64  "-D_FILE_OFFSET_BITS=64"
+#endif
 #define TARGET_CFLAGS_X86_ON_X86_64  "TARGET_CFLAGS=-m32 -D_FILE_OFFSET_BITS=64"
 #define TARGET_CFLAGS_PPC_ON_PPC64   "TARGET_CFLAGS=-m32 -D_FILE_OFFSET_BITS=64 -fPIC"
 #define TARGET_CFLAGS_ARM64            "TARGET_CFLAGS="
@@ -143,7 +147,11 @@
 
 #define GDB_TARGET_DEFAULT        "GDB_CONF_FLAGS="
 #define GDB_TARGET_ARM_ON_X86     "GDB_CONF_FLAGS=--target=arm-elf-linux"
+#if 0
 #define GDB_TARGET_ARM_ON_X86_64  "GDB_CONF_FLAGS=--target=arm-elf-linux CFLAGS=-m32"
+#else
+#define GDB_TARGET_ARM_ON_X86_64  "GDB_CONF_FLAGS=--target=arm-elf-linux"
+#endif
 #define GDB_TARGET_X86_ON_X86_64  "GDB_CONF_FLAGS=--target=i686-pc-linux-gnu CFLAGS=-m32"
 #define GDB_TARGET_PPC_ON_PPC64   "GDB_CONF_FLAGS=--target=ppc-elf-linux CFLAGS=-m32"
 #define GDB_TARGET_ARM64_ON_X86_64  "GDB_CONF_FLAGS=--target=aarch64-elf-linux"   /* TBD */
@@ -369,6 +377,7 @@
 	target_data.host = target_data.target;
 
 	if (target_data.target_as_param) {
+#if 0
 		if ((target_data.target == X86 || target_data.target == X86_64) &&
 		    (name_to_target((char *)target_data.target_as_param) == ARM)) {
 			/* 
@@ -406,6 +415,9 @@
 				target_to_name(target_data.host));
 			exit(1);
 		}
+#else
+		target_data.target = name_to_target((char *)target_data.target_as_param);
+#endif
         }
 
 	/*
