Allow makedumpfile package to compile for unknown arches

makedumpfile only supports x86_32, x86_64 and PPC64. Allow it to compile for
other arches so that it can be included, but it does not accomplish anything
but spew out an error message.

Signed-off-by: Benjamin Walsh <benjamin.walsh@windriver.com>

---

 makedumpfile.c |    8 ++++++++
 makedumpfile.h |   28 ++++++++++++++++++++++++++++
 2 files changed, 36 insertions(+)

--- a/makedumpfile.c
+++ b/makedumpfile.c
@@ -6948,6 +6948,7 @@
 	{0, 0, 0, 0}
 };
 
+#ifndef __unknown_arch__
 int
 main(int argc, char *argv[])
 {
@@ -7205,3 +7206,10 @@
 
 	return retcd;
 }
+#else
+int main(int argc, char *argv[])
+{
+	fprintf(stderr, "makedumpfile does not support this target architecture\n");
+	return 0;
+}
+#endif /* !__unknown_arch__ */
--- a/makedumpfile.h
+++ b/makedumpfile.h
@@ -427,6 +427,8 @@
 #define VMEMMAP_START		(info->vmemmap_start)
 #define VMEMMAP_END		(info->vmemmap_end)
 
+#undef FOUND_ARCH
+
 #ifdef __arm__
 #define KVBASE_MASK		(0xffff)
 #define KVBASE			(SYMBOL(_stext) & ~KVBASE_MASK)
@@ -442,6 +444,7 @@
 
 #define _PAGE_PRESENT		(1 << 0)
 
+#define FOUND_ARCH 1
 #endif /* arm */
 
 #ifdef __x86__
@@ -473,6 +476,7 @@
 
 #define ENTRY_MASK		(~0x8000000000000fffULL)
 
+#define FOUND_ARCH 1
 #endif /* x86 */
 
 #ifdef __x86_64__
@@ -522,6 +526,7 @@
 #define __PHYSICAL_MASK		((1UL << __PHYSICAL_MASK_SHIFT) - 1)
 #define PHYSICAL_PAGE_MASK	(~(PAGESIZE()-1) & (__PHYSICAL_MASK << PAGESHIFT()))
 
+#define FOUND_ARCH 1
 #endif /* x86_64 */
 
 #ifdef __powerpc64__
@@ -531,6 +536,7 @@
 #define KVBASE			(SYMBOL(_stext))
 #define _SECTION_SIZE_BITS	(24)
 #define _MAX_PHYSMEM_BITS	(44)
+#define FOUND_ARCH 1
 #endif
 
 #ifdef __powerpc32__
@@ -542,6 +548,7 @@
 #define _SECTION_SIZE_BITS	(24)
 #define _MAX_PHYSMEM_BITS	(44)
 
+#define FOUND_ARCH 1
 #endif
 
 #ifdef __s390x__
@@ -582,6 +589,7 @@
 #define _PAGE_INDEX_SHIFT	12
 #define _PAGE_OFFSET_MASK	0xffUL	/* page table offset mask */
 
+#define FOUND_ARCH 1
 #endif /* __s390x__ */
 
 #ifdef __ia64__ /* ia64 */
@@ -637,8 +645,28 @@
 #define STR_PUD_T_3L	"include/asm-generic/pgtable-nopud.h"
 #define STR_PUD_T_4L	"include/asm/page.h"
 
+#define FOUND_ARCH 1
 #endif          /* ia64 */
 
+#ifndef FOUND_ARCH
+#define __unknown_arch__
+
+#define __PAGE_OFFSET          (0xffffffffffffffff)
+#define KERNELBASE             PAGE_OFFSET
+#define VMALLOCBASE            (0xffffffffffffffff)
+#define KVBASE                 (SYMBOL(_stext))
+#define _SECTION_SIZE_BITS     (24)
+#define _MAX_PHYSMEM_BITS      (44)
+
+#define get_phys_base()                TRUE
+#define get_machdep_info()     TRUE
+#define get_versiondep_info()  TRUE
+#define vaddr_to_paddr(X)      (X)
+
+#define kvtop_xen(X)   FALSE
+#define get_xen_info_arch(X) FALSE
+#endif
+
 /*
  * The function of dependence on machine
  */
