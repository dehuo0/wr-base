Make makedumpfile cross compile in our environment

Compile bundled elfutils-0.125 but do not install it.
Link makedumpfile statically against elfutils-0.125.

Signed-off-by: Benjamin Walsh <benjamin.walsh@windriver.com>

---

 Makefile |   40 ++++++++++++++++++++++------------------
 1 file changed, 22 insertions(+), 18 deletions(-)

--- a/Makefile
+++ b/Makefile
@@ -8,13 +8,6 @@
 CC	= gcc
 endif
 
-CFLAGS = -g -O2 -Wall -D_FILE_OFFSET_BITS=64 \
-	  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE \
-	  -DVERSION='"$(VERSION)"' -DRELEASE_DATE='"$(DATE)"'
-CFLAGS_ARCH	= -g -O2 -Wall -D_FILE_OFFSET_BITS=64 \
-		    -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE
-# LDFLAGS = -L/usr/local/lib -I/usr/local/include
-
 # Use TARGET as the target architecture if specified.
 # Defaults to uname -m
 ifeq ($(strip($TARGET)),)
@@ -26,19 +19,26 @@
 			       -e s/s390x/s390/ -e s/parisc64/parisc/ \
 			       -e s/ppc64/powerpc64/ -e s/ppc/powerpc32/)
 
-CFLAGS += -D__$(ARCH)__
 CFLAGS_ARCH += -D__$(ARCH)__
 
 ifeq ($(ARCH), powerpc64)
-CFLAGS += -m64
 CFLAGS_ARCH += -m64
 endif
 
 ifeq ($(ARCH), powerpc32)
-CFLAGS += -m32
 CFLAGS_ARCH += -m32
 endif
 
+CFLAGS_ARCH += $(CFLAGS) \
+		$(ELFUTILS_CFLAGS) \
+		-D_FILE_OFFSET_BITS=64 \
+		-D_LARGEFILE_SOURCE \
+		-D_LARGEFILE64_SOURCE
+
+CFLAGS_COMMON = $(CFLAGS_ARCH) \
+		-DVERSION='"$(VERSION)"' \
+		-DRELEASE_DATE='"$(DATE)"'
+
 SRC	= makedumpfile.c makedumpfile.h diskdump_mod.h sadump_mod.h sadump_info.h
 SRC_PART = print_info.c dwarf_info.c elf_info.c erase_info.c sadump_info.c
 OBJ_PART = print_info.o dwarf_info.o elf_info.o erase_info.o sadump_info.o
@@ -52,19 +52,19 @@
 
 ifeq ($(USELZO), on)
 LIBS := -llzo2 $(LIBS)
-CFLAGS += -DUSELZO
+CFLAGS_COMMON += -DUSELZO
 endif
 
 all: makedumpfile
 
 $(OBJ_PART): $(SRC_PART)
-	$(CC) $(CFLAGS) -c -o ./$@ ./$(@:.o=.c) 
+	$(CC) $(CFLAGS_COMMON) -c -o ./$@ ./$(@:.o=.c)
 
 $(OBJ_ARCH): $(SRC_ARCH)
 	$(CC) $(CFLAGS_ARCH) -c -o ./$@ ./$(@:.o=.c) 
 
 makedumpfile: $(SRC) $(OBJ_PART) $(OBJ_ARCH)
-	$(CC) $(CFLAGS) $(LDFLAGS) $(OBJ_PART) $(OBJ_ARCH) -o $@ $< $(LIBS)
+	$(CC) $(CFLAGS_COMMON) $(ELFUTILS_LDFLAGS) $(LDFLAGS) $(OBJ_PART) $(OBJ_ARCH) -o $@ $< $(LIBS)
 	echo .TH MAKEDUMPFILE 8 \"$(DATE)\" \"makedumpfile v$(VERSION)\" \"Linux System Administrator\'s Manual\" > temp.8
 	grep -v "^.TH MAKEDUMPFILE 8" makedumpfile.8 >> temp.8
 	mv temp.8 makedumpfile.8
@@ -78,8 +78,12 @@
 	rm -f $(OBJ) $(OBJ_PART) $(OBJ_ARCH) makedumpfile makedumpfile.8.gz makedumpfile.conf.5.gz
 
 install:
-	cp makedumpfile ${DESTDIR}/bin
-	cp makedumpfile-R.pl ${DESTDIR}/bin
-	cp makedumpfile.8.gz ${DESTDIR}/usr/share/man/man8
-	cp makedumpfile.conf.5.gz ${DESTDIR}/usr/share/man/man5
-	cp makedumpfile.conf ${DESTDIR}/etc/makedumpfile.conf.sample
+	if [ ! -d ${DESTDIR}/bin ]; then mkdir -p ${DESTDIR}/bin; fi
+	install -m 755 makedumpfile ${DESTDIR}/bin
+	install -m 755 makedumpfile-R.pl ${DESTDIR}/bin
+	if [ ! -d ${DESTDIR}/usr/share/man/man8 ]; then mkdir -p ${DESTDIR}/usr/share/man/man8; fi
+	install -m 644 makedumpfile.8.gz ${DESTDIR}/usr/share/man/man8
+	if [ ! -d ${DESTDIR}/usr/share/man/man5 ]; then mkdir -p ${DESTDIR}/usr/share/man/man5; fi
+	install -m 644 makedumpfile.conf.5.gz ${DESTDIR}/usr/share/man/man5
+	if [ ! -d ${DESTDIR}/etc/ ]; then mkdir -p ${DESTDIR}/etc/; fi
+	install -m 644 makedumpfile.conf ${DESTDIR}/etc/makedumpfile.conf.sample
